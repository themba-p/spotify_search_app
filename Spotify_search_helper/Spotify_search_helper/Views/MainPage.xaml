<Page x:Name="page"
    x:Class="Spotify_search_helper.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Spotify_search_helper.Views"
    xmlns:model="using:Spotify_search_helper.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:ToolkitBehaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
      xmlns:winUiControls="using:Microsoft.UI.Xaml.Controls"
    DataContext="{Binding StartPageInstance, Source={StaticResource Locator}}"
    
    mc:Ignorable="d"
    >

    <Page.Resources>
        <converters:BoolNegationConverter x:Key="BoolNegationConverter"/>
        <converters:EmptyObjectToObjectConverter x:Key="EmptyObjectNegationVisibilityConverter" EmptyValue="Visible" NotEmptyValue="Collapsed"/>
        <converters:EmptyObjectToObjectConverter x:Key="EmptyObjectVisibilityConverter" EmptyValue="Collapsed" NotEmptyValue="Visible"/>
        <converters:EmptyCollectionToObjectConverter x:Key="CollectionVisibilityConverter" EmptyValue="Collapsed" NotEmptyValue="Visible"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:BoolToObjectConverter x:Key="BoolToVisibilityInverseConverter" TrueValue="Collapsed" FalseValue="Visible"/>
        <Style x:Key="CategoryContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
       
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder" extensions:Mouse.Cursor="Hand" Margin="0 0 0 0" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="24" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" Control.IsTemplateFocusTarget="True" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="ContentBorderScale"/>
                            </Grid.RenderTransform>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <!--<DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="0.3"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--<DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Controls:DropShadowPanel BlurRadius="20.0" Margin="12" ShadowOpacity="0.08" OffsetX="3.0" OffsetY="8.0" Color="Black" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                                  Visibility="{Binding ElementName=page, Path=DataContext, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                                <Rectangle Fill="{ThemeResource ItemBackgroundThemeBrush}" RadiusX="24" RadiusY="24" HorizontalAlignment="Stretch" Height="160" Width="164"/>
                            </Controls:DropShadowPanel>
                            <Grid>
                                <Rectangle x:Name="BorderBackground" Fill="{StaticResource ItemBackgroundThemeBrush}" Opacity="0" IsHitTestVisible="False" Control.IsTemplateFocusTarget="True"/>
                                <Grid x:Name="ContentPresenterGrid" Background="Transparent" Margin="0">
                                    <Grid.RenderTransform>
                                        <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                    </Grid.RenderTransform>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                                <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                                <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackground}" Visibility="Collapsed"/>
                            </Grid>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LargeCategoryContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder" extensions:Mouse.Cursor="Hand" Margin="0 0 0 0" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="24" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" Control.IsTemplateFocusTarget="True" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="ContentBorderScale"/>
                            </Grid.RenderTransform>

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <!--<DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="0.3"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <!--<DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Controls:DropShadowPanel BlurRadius="20.0" Margin="12" ShadowOpacity="0.08" OffsetX="3.0" OffsetY="8.0" Color="Black" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                                  Visibility="{Binding ElementName=page, Path=DataContext, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                                <Rectangle Fill="Transparent" RadiusX="24" RadiusY="24" HorizontalAlignment="Stretch" Height="192" Width="246"/>
                            </Controls:DropShadowPanel>
                            <Grid>
                                <Rectangle x:Name="BorderBackground" Fill="{StaticResource ItemBackgroundThemeBrush}" Opacity="0" IsHitTestVisible="False" Control.IsTemplateFocusTarget="True"/>
                                <Grid x:Name="ContentPresenterGrid" Background="Transparent" Margin="0">
                                    <Grid.RenderTransform>
                                        <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                    </Grid.RenderTransform>
                                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                                <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                                <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackground}" Visibility="Collapsed"/>
                            </Grid>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>
        <Style x:Key="CaptionTextBlockStyle" BasedOn="{StaticResource BaseTextBlockStyle}" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style x:Key="MenuCategoryContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource BorderThemeBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Margin" Value="0 0 8 0"/>
            <Setter Property="Padding" Value="0 0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="Height" Value="34px"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" Control.IsTemplateFocusTarget="True" RenderTransformOrigin="0.5,0.5" extensions:Mouse.Cursor="Hand">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="ContentBorderScale"/>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>

                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.150" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderThickness">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#ffffff"/>
                                            </ObjectAnimationUsingKeyFrames>

                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderThickness">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#ffffff"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity" To="0.8"/>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="BorderThickness">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#ffffff"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity" To="0.6"/>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="BorderBackground" Fill="{ThemeResource BrandColorThemeBrush}" IsHitTestVisible="False" Control.IsTemplateFocusTarget="True" Opacity="0"/>
                            <Grid x:Name="ContentPresenterGrid" Background="Transparent" Margin="0,0,0,0">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                </Grid.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" Foreground="{ThemeResource ItemTertiaryForeground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                            <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackground}" Visibility="Collapsed"/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseTextBlockStyle1" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>
        <Style x:Key="CaptionTextBlockStyle1" BasedOn="{StaticResource BaseTextBlockStyle1}" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style x:Key="PlaylistViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,0,24,48"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" Control.IsTemplateFocusTarget="True" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="ContentBorderScale"/>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <Storyboard>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="MultiSelectStates">
                                    <VisualState x:Name="MultiSelectDisabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="-32"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="32"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultiSelectEnabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Bottom" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Top" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Right" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Left" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NotDragging"/>
                                    <VisualState x:Name="Dragging">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                            <DragItemThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggingTarget"/>
                                    <VisualState x:Name="MultipleDraggingPrimary">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayText" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayTextBorder" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayTextBorder"/>
                                            <DragItemThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingSecondary"/>
                                    <VisualState x:Name="DraggedPlaceholder"/>
                                    <VisualState x:Name="Reordering">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemReorderThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReorderingTarget">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"/>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorderScale" Storyboard.TargetProperty="ScaleX" To="{ThemeResource ListViewItemReorderTargetThemeScale}"/>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorderScale" Storyboard.TargetProperty="ScaleY" To="{ThemeResource ListViewItemReorderTargetThemeScale}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleReorderingPrimary">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayText" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayTextBorder" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayTextBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReorderedPlaceholder">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DragOver">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="BorderBackground" RadiusX="40" RadiusY="40" Height="250" Fill="Transparent" IsHitTestVisible="False" Control.IsTemplateFocusTarget="True" Opacity="0" VerticalAlignment="Top"/>
                            <Grid x:Name="ContentPresenterGrid" Background="Transparent" Margin="0,0,0,0">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                </Grid.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                            <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackground}" Visibility="Collapsed"/>
                            <Border x:Name="MultiSelectSquare" BorderThickness="2" BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" HorizontalAlignment="Left" Height="20" Margin="12,0,0,0" VerticalAlignment="Center" Visibility="Collapsed" Width="20">
                                <Border.Clip>
                                    <RectangleGeometry Rect="0,0,20,20">
                                        <RectangleGeometry.Transform>
                                            <TranslateTransform x:Name="MultiSelectClipTransform"/>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Border.Clip>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="MultiSelectCheckBoxTransform"/>
                                </Border.RenderTransform>
                                <FontIcon x:Name="MultiSelectCheck" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" FontSize="16" Glyph="&#xE73E;" Opacity="0" Visibility="Collapsed"/>
                            </Border>
                            <Border x:Name="MultiArrangeOverlayTextBorder" Background="{ThemeResource SystemControlBackgroundAccentBrush}" BorderThickness="2" BorderBrush="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" HorizontalAlignment="Left" Height="20" IsHitTestVisible="False" MinWidth="20" Margin="12,0,0,0" Opacity="0" VerticalAlignment="Center">
                                <TextBlock x:Name="MultiArrangeOverlayText" AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="Center" IsHitTestVisible="False" Opacity="0" Style="{ThemeResource CaptionTextBlockStyle1}" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxStyle1" TargetType="TextBox">
            <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}"/>
            <Setter Property="Background" Value="{ThemeResource TextControlBackground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource TextControlSelectionHighlightColor}"/>
            <Setter Property="BorderThickness" Value="{ThemeResource TextControlBorderThemeThickness}"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}"/>
            <Setter Property="ContextFlyout" Value="{StaticResource TextControlCommandBarContextFlyout}"/>
            <Setter Property="SelectionFlyout" Value="{StaticResource TextControlCommandBarSelectionFlyout}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid x:Name="ButtonLayoutGrid" Background="{ThemeResource TextControlButtonBackground}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Opacity" To="0"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <TextBlock x:Name="GlyphElement" AutomationProperties.AccessibilityView="Raw" FontStyle="Normal" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource TextControlButtonForeground}" FontSize="12" HorizontalAlignment="Center" Text="&#xE10A;" VerticalAlignment="Center"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundDisabled}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource InputBoxHoverThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource InputBoxHoverThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundPointerOver}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForegroundFocused}}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Light"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonStates">
                                    <VisualState x:Name="ButtonVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ButtonCollapsed"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.ColumnSpan="2" Grid.Column="0" FontWeight="Normal" Foreground="{ThemeResource TextControlHeaderForeground}" Margin="{ThemeResource TextBoxTopHeaderMargin}" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <Border x:Name="BorderElement" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" Grid.ColumnSpan="2" Grid.Column="0" Control.IsTemplateFocusTarget="True" MinHeight="{ThemeResource TextControlThemeMinHeight}" MinWidth="{ThemeResource TextControlThemeMinWidth}" Grid.RowSpan="1" Grid.Row="1"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" Grid.Column="0" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled"/>
                            <TextBlock x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{Binding PlaceholderForeground, RelativeSource={RelativeSource Mode=TemplatedParent}, TargetNullValue={ThemeResource TextControlPlaceholderForeground}}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" Text="{TemplateBinding PlaceholderText}" TextWrapping="{TemplateBinding TextWrapping}" TextAlignment="{TemplateBinding TextAlignment}"/>
                            <Button x:Name="DeleteButton" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" MinWidth="34" Margin="{ThemeResource HelperButtonThemePadding}" Grid.Row="1" Style="{StaticResource DeleteButtonStyle}" VerticalAlignment="Stretch" Visibility="Collapsed"/>
                            <ContentPresenter x:Name="DescriptionPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Description}" Grid.ColumnSpan="2" Grid.Column="0" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" x:Load="False"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseTextBlockStyle2" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>
        <Style x:Key="CaptionTextBlockStyle2" BasedOn="{StaticResource BaseTextBlockStyle2}" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style x:Key="ListViewItemContainerStyle1" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,0,8,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" Control.IsTemplateFocusTarget="True" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="ContentBorderScale"/>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="1"/>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="1"/>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="1"/>

                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="MultiSelectStates">
                                    <VisualState x:Name="MultiSelectDisabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="-32"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="32"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultiSelectEnabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Bottom" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Top" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Right" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Left" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NotDragging"/>
                                    <VisualState x:Name="Dragging">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                            <DragItemThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggingTarget"/>
                                    <VisualState x:Name="MultipleDraggingPrimary">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayText" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayTextBorder" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayTextBorder"/>
                                            <DragItemThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingSecondary"/>
                                    <VisualState x:Name="DraggedPlaceholder"/>
                                    <VisualState x:Name="Reordering">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemReorderThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReorderingTarget">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"/>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorderScale" Storyboard.TargetProperty="ScaleX" To="{ThemeResource ListViewItemReorderTargetThemeScale}"/>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorderScale" Storyboard.TargetProperty="ScaleY" To="{ThemeResource ListViewItemReorderTargetThemeScale}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleReorderingPrimary">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayText" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayTextBorder" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayTextBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReorderedPlaceholder">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DragOver">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="BorderBackground" RadiusX="30" RadiusY="30" Fill="{x:Null}" IsHitTestVisible="False" Control.IsTemplateFocusTarget="True" Opacity="1"/>
                            <Grid x:Name="ContentPresenterGrid" Background="Transparent" Margin="0,0,0,0">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                </Grid.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                            <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackground}" Visibility="Collapsed"/>
                            <Border x:Name="MultiSelectSquare" BorderThickness="2" BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" HorizontalAlignment="Left" Height="20" Margin="12,0,0,0" VerticalAlignment="Center" Visibility="Collapsed" Width="20">
                                <Border.Clip>
                                    <RectangleGeometry Rect="0,0,20,20">
                                        <RectangleGeometry.Transform>
                                            <TranslateTransform x:Name="MultiSelectClipTransform"/>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Border.Clip>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="MultiSelectCheckBoxTransform"/>
                                </Border.RenderTransform>
                                <FontIcon x:Name="MultiSelectCheck" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" FontSize="16" Glyph="&#xE73E;" Opacity="0" Visibility="Collapsed"/>
                            </Border>
                            <Border x:Name="MultiArrangeOverlayTextBorder" Background="{ThemeResource SystemControlBackgroundAccentBrush}" BorderThickness="2" BorderBrush="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" HorizontalAlignment="Left" Height="20" IsHitTestVisible="False" MinWidth="20" Margin="12,0,0,0" Opacity="0" VerticalAlignment="Center">
                                <TextBlock x:Name="MultiArrangeOverlayText" AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="Center" IsHitTestVisible="False" Opacity="0" Style="{ThemeResource CaptionTextBlockStyle2}" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseTextBlockStyle3" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>
        <Style x:Key="CaptionTextBlockStyle3" BasedOn="{StaticResource BaseTextBlockStyle3}" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style x:Key="ExpandedSelectedPlaylistContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Margin" Value="0,0,0,12"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" Control.IsTemplateFocusTarget="True" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="ContentBorderScale"/>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentLowBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="MultiSelectStates">
                                    <VisualState x:Name="MultiSelectDisabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="-32"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="32"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultiSelectEnabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeySpline="0.1,0.9,0.2,1" KeyTime="0:0:0.333" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Bottom" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Top" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Right" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Left" TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NotDragging"/>
                                    <VisualState x:Name="Dragging">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                            <DragItemThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggingTarget"/>
                                    <VisualState x:Name="MultipleDraggingPrimary">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayText" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayTextBorder" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayTextBorder"/>
                                            <DragItemThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingSecondary"/>
                                    <VisualState x:Name="DraggedPlaceholder"/>
                                    <VisualState x:Name="Reordering">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemReorderThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReorderingTarget">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"/>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorderScale" Storyboard.TargetProperty="ScaleX" To="{ThemeResource ListViewItemReorderTargetThemeScale}"/>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorderScale" Storyboard.TargetProperty="ScaleY" To="{ThemeResource ListViewItemReorderTargetThemeScale}"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleReorderingPrimary">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayText" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiArrangeOverlayTextBorder" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Opacity" To="0"/>
                                            <DoubleAnimation Duration="0:0:0.240" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDragThemeOpacity}"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayTextBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReorderedPlaceholder">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DragOver">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation TargetName="ContentBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="BorderBackground" Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}" IsHitTestVisible="False" Control.IsTemplateFocusTarget="True" Opacity="0"/>
                            <Grid x:Name="ContentPresenterGrid" Background="Transparent" Margin="0,0,0,0">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                </Grid.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                            <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackground}" Visibility="Collapsed"/>
                            <Border x:Name="MultiSelectSquare" BorderThickness="2" BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" HorizontalAlignment="Left" Height="20" Margin="12,0,0,0" VerticalAlignment="Center" Visibility="Collapsed" Width="20">
                                <Border.Clip>
                                    <RectangleGeometry Rect="0,0,20,20">
                                        <RectangleGeometry.Transform>
                                            <TranslateTransform x:Name="MultiSelectClipTransform"/>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Border.Clip>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="MultiSelectCheckBoxTransform"/>
                                </Border.RenderTransform>
                                <FontIcon x:Name="MultiSelectCheck" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}" FontSize="16" Glyph="&#xE73E;" Opacity="0" Visibility="Collapsed"/>
                            </Border>
                            <Border x:Name="MultiArrangeOverlayTextBorder" Background="{ThemeResource SystemControlBackgroundAccentBrush}" BorderThickness="2" BorderBrush="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" HorizontalAlignment="Left" Height="20" IsHitTestVisible="False" MinWidth="20" Margin="12,0,0,0" Opacity="0" VerticalAlignment="Center">
                                <TextBlock x:Name="MultiArrangeOverlayText" AutomationProperties.AccessibilityView="Raw" HorizontalAlignment="Center" IsHitTestVisible="False" Opacity="0" Style="{ThemeResource CaptionTextBlockStyle3}" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PopupDismissCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" TextWrapping="Wrap" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleSwitchStyle1" TargetType="ToggleSwitch">
            <Setter Property="Foreground" Value="{ThemeResource ToggleSwitchContentForeground}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ManipulationMode" Value="System,TranslateX"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="-7,-3,-7,-3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleSwitch">
                        <Grid Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="StrokeThickness">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundPressed}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchHeaderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchAreaGrid" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ToggleStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" GeneratedDuration="0" To="On">
                                            <Storyboard>
                                                <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" GeneratedDuration="0" To="Off">
                                            <Storyboard>
                                                <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OnToOffTransition" From="On" GeneratedDuration="0" To="Off">
                                            <Storyboard>
                                                <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OffToOnTransition" From="Off" GeneratedDuration="0" To="On">
                                            <Storyboard>
                                                <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Dragging"/>
                                    <VisualState x:Name="Off"/>
                                    <VisualState x:Name="On">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="KnobTranslateTransform" Storyboard.TargetProperty="X" To="24"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobBounds" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOn" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnobOff" Storyboard.TargetProperty="Opacity">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ContentStates">
                                    <VisualState x:Name="OffContent">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <x:Boolean>True</x:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OnContent">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="Opacity" To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter" Storyboard.TargetProperty="IsHitTestVisible">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <x:Boolean>True</x:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="HeaderContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource ToggleSwitchHeaderForeground}" IsHitTestVisible="False" Margin="{ThemeResource ToggleSwitchTopHeaderMargin}" Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <Grid HorizontalAlignment="Left" MinWidth="{StaticResource ToggleSwitchThemeMinWidth}" Grid.Row="1" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition MaxWidth="12" Width="12"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{ThemeResource ToggleSwitchPreContentMargin}"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="{ThemeResource ToggleSwitchPostContentMargin}"/>
                                </Grid.RowDefinitions>
                                <Grid x:Name="SwitchAreaGrid" Background="{ThemeResource ToggleSwitchContainerBackground}" Grid.ColumnSpan="3" Control.IsTemplateFocusTarget="True" Margin="0,5" Grid.RowSpan="3"/>
                                <ContentPresenter x:Name="OffContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding OffContentTemplate}" Content="{TemplateBinding OffContent}" Grid.Column="2" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="OnContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding OnContentTemplate}" Content="{TemplateBinding OnContent}" Grid.Column="2" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="OuterBorder" Fill="{ThemeResource ToggleSwitchFillOff}" Height="20" RadiusX="10" RadiusY="10" Grid.Row="1" StrokeThickness="2" Stroke="{ThemeResource ToggleSwitchStrokeOff}" Width="44"/>
                                <Rectangle x:Name="SwitchKnobBounds" Fill="{ThemeResource BrandColorThemeBrush}" Height="20" Opacity="0" RadiusX="10" RadiusY="10" Grid.Row="1" StrokeThickness="{ThemeResource ToggleSwitchOnStrokeThickness}" Stroke="{ThemeResource ToggleSwitchStrokeOn}" Width="44"/>
                                <Grid x:Name="SwitchKnob" HorizontalAlignment="Left" Height="20" Grid.Row="1" Width="20">
                                    <Grid.RenderTransform>
                                        <TranslateTransform x:Name="KnobTranslateTransform"/>
                                    </Grid.RenderTransform>
                                    <Ellipse x:Name="SwitchKnobOn" Fill="{ThemeResource ToggleSwitchKnobFillOn}" Height="10" Opacity="0" Width="10"/>
                                    <Ellipse x:Name="SwitchKnobOff" Fill="{ThemeResource ToggleSwitchKnobFillOff}" Height="10" Width="10"/>
                                </Grid>
                                <Thumb x:Name="SwitchThumb" AutomationProperties.AccessibilityView="Raw" Grid.ColumnSpan="3" Grid.RowSpan="3">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="Transparent"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BaseTextBlockStyle4" TargetType="TextBlock">
            <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
            <Setter Property="TextLineBounds" Value="Full"/>
        </Style>
        <Style x:Key="CaptionTextBlockStyle4" BasedOn="{StaticResource BaseTextBlockStyle4}" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style x:Key="AlphabetListViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0 0 0 0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="AllowDrop" Value="False"/>
            <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
            <Setter Property="FocusVisualMargin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}" FocusVisualMargin="{TemplateBinding FocusVisualMargin}" Control.IsTemplateFocusTarget="True" RenderTransformOrigin="0.5,0.5">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="ContentBorderScale"/>
                            </Grid.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity" To="0.8"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ItemSecondaryForeground}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Opacity" To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ContentPresenterGrid" Background="Transparent" Margin="0,0,0,0">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                </Grid.RenderTransform>
                                <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                            <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackground}" Visibility="Collapsed"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AutoSuggestBoxTextBoxStyle" TargetType="TextBox">
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"/>
            <Setter Property="Height" Value="48"/>
            <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}"/>
            <Setter Property="Background" Value="{ThemeResource InputBoxThemeBrush}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource BorderThemeBrush}"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource BrandColorThemeBrush}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid x:Name="ButtonLayoutGrid" Background="{ThemeResource TextControlButtonBackground}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GlyphElement" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="#ffffff"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="ButtonLayoutGrid" Storyboard.TargetProperty="Opacity" To="0"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <TextBlock x:Name="GlyphElement" AutomationProperties.AccessibilityView="Raw" FontStyle="Normal" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource TextControlButtonForeground}" FontSize="{ThemeResource AutoSuggestBoxIconFontSize}" HorizontalAlignment="Center" Text="&#xE10A;" VerticalAlignment="Center"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Name="QueryButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BackgroundSizing="{TemplateBinding BackgroundSizing}" Background="{ThemeResource TextControlButtonBackground}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{ThemeResource TextControlButtonBorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" FontSize="{ThemeResource AutoSuggestBoxIconFontSize}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="#ffffff"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Opacity" To="0"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                </ContentPresenter>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource InputBoxHoverThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource InputBoxHoverThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="Background">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderElement" Storyboard.TargetProperty="BorderBrush">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource BrandColorThemeBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundFocused}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="RequestedTheme">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Light"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="QueryButton" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForeground}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonStates">
                                    <VisualState x:Name="ButtonVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DeleteButton" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ButtonCollapsed"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="BorderElement" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="3" Grid.RowSpan="1" Grid.Row="1"/>
                            <ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.ColumnSpan="3" FontWeight="Normal" Foreground="{ThemeResource TextControlHeaderForeground}" Margin="{ThemeResource AutoSuggestBoxTopHeaderMargin}" Grid.Row="0" TextWrapping="Wrap" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled"/>
                            <ContentControl x:Name="PlaceholderTextContentPresenter" Content="{TemplateBinding PlaceholderText}" Grid.ColumnSpan="3" Foreground="{ThemeResource PlaceHolderTextThemeBrush}" IsTabStop="False" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="12 12 12 0" Grid.Row="1"/>
                            <Button x:Name="DeleteButton" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" MinWidth="34" Grid.Row="1" Style="{StaticResource DeleteButtonStyle}" VerticalAlignment="Stretch" Visibility="Collapsed" Width="{TemplateBinding Height}"/>
                            <Button x:Name="QueryButton" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="2" FontSize="{TemplateBinding FontSize}" IsTabStop="False" MinWidth="34" Grid.Row="1" Style="{StaticResource QueryButtonStyle}" VerticalAlignment="Stretch" Width="{TemplateBinding Height}"/>
                            <ContentPresenter x:Name="DescriptionPresenter" AutomationProperties.AccessibilityView="Raw" Content="{TemplateBinding Description}" Grid.ColumnSpan="3" Foreground="{ThemeResource SystemControlDescriptionTextForegroundBrush}" Grid.Row="2" x:Load="False"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AutoSuggestBoxStyle1" TargetType="AutoSuggestBox">
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="TextBoxStyle" Value="{StaticResource AutoSuggestBoxTextBoxStyle}"/>
            <Setter Property="UseSystemFocusVisuals" Value="{ThemeResource IsApplicationFocusVisualKindReveal}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AutoSuggestBox">
                        <Grid x:Name="LayoutRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="Orientation">
                                    <VisualState x:Name="Landscape"/>
                                    <VisualState x:Name="Portrait"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <TextBox x:Name="TextBox" Padding="12 12 12 0" ScrollViewer.BringIntoViewOnFocusChange="False" Description="{TemplateBinding Description}" DesiredCandidateWindowAlignment="BottomEdge" Header="{TemplateBinding Header}" Margin="0" PlaceholderText="{TemplateBinding PlaceholderText}" Style="{TemplateBinding TextBoxStyle}" UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}" Width="{TemplateBinding Width}" Canvas.ZIndex="0"/>
                            <Popup x:Name="SuggestionsPopup">
                                <Border x:Name="SuggestionsContainer">
                                    <ListView x:Name="SuggestionsList" Background="{ThemeResource AutoSuggestBoxSuggestionsListBackground}" BorderThickness="{ThemeResource AutoSuggestListBorderThemeThickness}" BorderBrush="{ThemeResource AutoSuggestBoxSuggestionsListBorderBrush}" DisplayMemberPath="{TemplateBinding DisplayMemberPath}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" ItemTemplate="{TemplateBinding ItemTemplate}" IsItemClickEnabled="True" ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}" MaxHeight="{ThemeResource AutoSuggestListMaxHeight}" Margin="{ThemeResource AutoSuggestListMargin}" Padding="{ThemeResource AutoSuggestListPadding}"/>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="108"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="420" Width="*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition MinWidth="320" Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.BackgroundTransition>
            <BrushTransition />
        </Grid.BackgroundTransition>


        <StackPanel x:Name="LogoView" 
                    Margin="96 0 0 0" 
                    Orientation="Horizontal"
                    VerticalAlignment="Center">
            <Image Height="26.86" 
                       Margin="0 0 8 0"
                       Source="/Assets/logo_icon@3x.png"/>
            <TextBlock Text="Trackify" FontSize="17" FontWeight="Bold"/>
        </StackPanel>
        <Grid x:Name="Profileview" 
              Visibility="{Binding ElementName=page, Path=DataContext.Profile, Converter={StaticResource EmptyObjectVisibilityConverter}}"
              DataContext="{Binding Profile}"
              extensions:Mouse.Cursor="Hand"
              Grid.Column="2"
              Height="64px"
              HorizontalAlignment="Right"
              Margin="0 0 96 0"
              Width="164" 
              RenderTransformOrigin="0.5,0.5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="PointerEntered">
                    <Core:CallMethodAction TargetObject="{Binding ElementName=profileBgScaleUp}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=profileNameOffsetRight}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=signInOffsetRight}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=profilePhotoScaleUp}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=signInFadeOut}" MethodName="StartAnimation"/>
                </Core:EventTriggerBehavior>
                <Core:EventTriggerBehavior EventName="PointerExited">
                    <Core:CallMethodAction TargetObject="{Binding ElementName=profileBgScaleDown}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=profileNameOffsetLeft}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=signInOffsetLeft}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=profilePhotoScaleDown}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=signInFadeIn}" MethodName="StartAnimation"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <!--<Grid Background="{ThemeResource ItemBackgroundThemeBrush}" 
                    Grid.RowSpan="10"
                    Grid.ColumnSpan="10"
                    CornerRadius="24"
                    HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch">
                <Interactivity:Interaction.Behaviors>
                    <ToolkitBehaviors:Scale x:Name="profileBgScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.1" ScaleY="1.1" CenterX="82" CenterY="32" EasingMode="EaseOut" EasingType="Cubic" />
                    <ToolkitBehaviors:Scale x:Name="profileBgScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="82" CenterY="32" EasingMode="EaseOut" EasingType="Cubic"/>
                </Interactivity:Interaction.Behaviors>
            </Grid>-->
            <Controls:DropShadowPanel BlurRadius="12.0" Grid.RowSpan="10" HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch"
                    Grid.ColumnSpan="10" ShadowOpacity="0.06" OffsetX="6.0" OffsetY="6.0" Color="Black"
                    Visibility="{Binding ElementName=page, Path=DataContext, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                <Interactivity:Interaction.Behaviors>
                    <ToolkitBehaviors:Scale x:Name="profileBgScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.1" ScaleY="1.1" CenterX="82" CenterY="32" EasingMode="EaseOut" EasingType="Cubic" />
                    <ToolkitBehaviors:Scale x:Name="profileBgScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="82" CenterY="32" EasingMode="EaseOut" EasingType="Cubic"/>
                </Interactivity:Interaction.Behaviors>
                <Rectangle Fill="{ThemeResource ItemBackgroundThemeBrush}" Width="164" Height="64" RadiusX="24" RadiusY="24"/>
            </Controls:DropShadowPanel>
            
            <Grid Background="{ThemeResource SecondaryItemBackgroundThemeBrush}"
                  CornerRadius="24"
                  Height="40px"
                  Margin="12, 0, 0, 0"
                  Width="40px">
                <Interactivity:Interaction.Behaviors>
                    <ToolkitBehaviors:Scale x:Name="profilePhotoScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.2" ScaleY="1.2" CenterX="20" CenterY="20" EasingMode="EaseOut"  EasingType="Cubic" />
                    <ToolkitBehaviors:Scale x:Name="profilePhotoScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="20" CenterY="20" EasingMode="EaseOut"   EasingType="Cubic"/>
                </Interactivity:Interaction.Behaviors>

                <Image Source="{Binding Image}" Stretch="UniformToFill"/>
            </Grid>
            <StackPanel Grid.Column="1"
                        Margin="12 0 16 0"
                        VerticalAlignment="Center"
                        MaxWidth="140">
                <TextBlock Text="Sign in as"
                               FontSize="12"
                               FontWeight="Normal"
                               Foreground="{ThemeResource ItemTertiaryForeground}">
                    <Interactivity:Interaction.Behaviors>
                        <ToolkitBehaviors:Offset x:Name="signInOffsetRight" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="6" OffsetY="12" EasingMode="EaseOut" EasingType="Cubic" />
                        <ToolkitBehaviors:Fade x:Name="signInFadeOut"  Duration="300" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                        <ToolkitBehaviors:Fade x:Name="signInFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                        <ToolkitBehaviors:Offset x:Name="signInOffsetLeft"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                    </Interactivity:Interaction.Behaviors>
                </TextBlock>
                <TextBlock Text="{Binding DisplayName, FallbackValue=Unknown}"
                               TextTrimming="CharacterEllipsis"
                               FontSize="17"
                               FontWeight="Medium"
                               Foreground="{ThemeResource ItemPrimaryForeground}"
                               Margin="0 2 0 0">
                    
                    <Interactivity:Interaction.Behaviors>
                        <ToolkitBehaviors:Offset x:Name="profileNameOffsetRight" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="6" OffsetY="-10" EasingMode="EaseOut"  EasingType="Cubic" />
                        <ToolkitBehaviors:Offset x:Name="profileNameOffsetLeft"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                    </Interactivity:Interaction.Behaviors>
                </TextBlock>
            </StackPanel>
        </Grid>
        <ListView x:Name="CategoryView" 
                  IsItemClickEnabled="True"
                  model:ItemClickCommand.Command="{Binding CategoryItemClickedCommand}"
                  ItemsSource="{Binding CategoryList}" 
                  ItemContainerStyle="{StaticResource LargeCategoryContainerStyle}"
                  MaxHeight="600"
                  Grid.RowSpan="100"
                  Grid.ColumnSpan="10"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  ScrollViewer.VerticalScrollMode="Enabled"
                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  Visibility="{Binding IsCompactCategory, Converter={StaticResource BoolToVisibilityInverseConverter}, FallbackValue=collapsed}">
            <Interactivity:Interaction.Behaviors>
                <ToolkitBehaviors:Scale x:Name="CategoryViewScaleUp" Duration="400" Delay="0" AutomaticallyStart="False" ScaleX="1.5" ScaleY="1.5" CenterX="125" CenterY="100" EasingMode="EaseOut"  EasingType="Cubic" />
                <ToolkitBehaviors:Scale x:Name="CategoryViewScaleDown"  Duration="400" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="125" CenterY="100" EasingMode="EaseOut"   EasingType="Cubic"/>

                <ToolkitBehaviors:Fade x:Name="CategoryViewFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                <ToolkitBehaviors:Fade x:Name="CategoryViewFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
            </Interactivity:Interaction.Behaviors>

            <Grid/>
            <Grid/>
            <Grid/>
            <Grid/>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid CornerRadius="24"
                          Background="{ThemeResource ItemBackgroundThemeBrush}"
                          Height="200px"
                          VerticalAlignment="Stretch" 
                          HorizontalAlignment="Stretch"
                          Width="250px">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:CallMethodAction TargetObject="{Binding ElementName=GridScaleUp}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryTitleOffsetRight}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryDescriptionOffsetRight}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryDescriptionFadeOut}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryIconScaleUp}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=chevOffsetRight}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=chevFadeIn}" MethodName="StartAnimation"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerExited">
                                <Core:CallMethodAction TargetObject="{Binding ElementName=GridScaleDown}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryTitleOffsetLeft}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryDescriptionOffsetLeft}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryDescriptionFadeIn}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryIconScaleDown}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=chevOffsetLeft}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=chevFadeOut}" MethodName="StartAnimation"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>

                        <!--<Grid Background="{ThemeResource ItemBackgroundThemeBrush}" 
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Interactivity:Interaction.Behaviors>
                                <ToolkitBehaviors:Scale x:Name="GridScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.1" ScaleY="1.1" CenterX="125" CenterY="50" EasingMode="EaseOut" EasingType="Cubic" />
                                <ToolkitBehaviors:Scale x:Name="GridScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="125" CenterY="50" EasingMode="EaseOut" EasingType="Cubic"/>
                            </Interactivity:Interaction.Behaviors>
                        </Grid>-->
                        <StackPanel Margin="16 32 16 24"
                                    VerticalAlignment="Bottom">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Interactivity:Interaction.Behaviors>
                                    <ToolkitBehaviors:Offset x:Name="categoryTitleOffsetRight" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="24" EasingMode="EaseOut"  EasingType="Cubic" />
                                    <ToolkitBehaviors:Offset x:Name="categoryTitleOffsetLeft"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                </Interactivity:Interaction.Behaviors>
                                <TextBlock Text="{Binding Title}"
                                           VerticalAlignment="Center"
                                       FontSize="24px"
                                       Foreground="{ThemeResource ItemPrimaryForeground}"
                                       FontWeight="Bold">

                                </TextBlock>
                                <Image Grid.Column="1" Height="12px" Margin="16 8 0 0" Source="/Assets/chevron.png" VerticalAlignment="Center" Opacity="0">
                                    <Interactivity:Interaction.Behaviors>
                                        <ToolkitBehaviors:Offset x:Name="chevOffsetRight" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="-10" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                        <ToolkitBehaviors:Offset x:Name="chevOffsetLeft"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="-10" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                        <ToolkitBehaviors:Fade x:Name="chevFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                        <ToolkitBehaviors:Fade x:Name="chevFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                    </Interactivity:Interaction.Behaviors>
                                </Image>
                            </Grid>
                            <TextBlock Text="{Binding Description}"
                                       FontSize="14px"
                                       Foreground="{ThemeResource ItemSecondaryForeground}"
                                       FontWeight="Normal"
                                       TextWrapping="WrapWholeWords">
                                <Interactivity:Interaction.Behaviors>
                                <ToolkitBehaviors:Offset x:Name="categoryDescriptionOffsetRight" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="4" EasingMode="EaseOut" EasingType="Cubic" />
                                <ToolkitBehaviors:Offset x:Name="categoryDescriptionOffsetLeft"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                              <ToolkitBehaviors:Fade x:Name="categoryDescriptionFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                <ToolkitBehaviors:Fade x:Name="categoryDescriptionFadeOut"  Duration="300" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                            </Interactivity:Interaction.Behaviors>
                            </TextBlock>
                        </StackPanel>
                        <Grid Background="{ThemeResource SecondaryItemBackgroundAltThemeBrush}"
                              CornerRadius="12"
                              Height="48px"
                              HorizontalAlignment="Left"
                              Margin="16"
                              VerticalAlignment="Top"
                              Width="48px">
                            <Interactivity:Interaction.Behaviors>
                                <ToolkitBehaviors:Scale x:Name="categoryIconScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.2" ScaleY="1.2" CenterX="24" CenterY="24" EasingMode="EaseOut"  EasingType="Cubic" />
                                <ToolkitBehaviors:Scale x:Name="categoryIconScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="24" CenterY="24" EasingMode="EaseOut"   EasingType="Cubic"/>
                            </Interactivity:Interaction.Behaviors>
                            <Image Width="20px" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding IconPath}" Stretch="Uniform"/>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>
        <ListView x:Name="CategoryCompactView"
                  IsItemClickEnabled="True"
                  model:ItemClickCommand.Command="{Binding CategoryItemClickedCommand}"
                  ItemsSource="{Binding CategoryList}"
                  ItemContainerStyle="{StaticResource CategoryContainerStyle}"
                  MaxHeight="412"
                  Grid.RowSpan="100"
                  Margin="24 0 24 0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  ScrollViewer.VerticalScrollMode="Enabled"
                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                  Visibility="{Binding IsCompactCategory, Converter={StaticResource BoolToVisibilityConverter}}">
            <Interactivity:Interaction.Behaviors>
                <ToolkitBehaviors:Fade x:Name="categoryCompactViewFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                <ToolkitBehaviors:Fade x:Name="categoryCompactViewFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                <ToolkitBehaviors:Offset x:Name="categoryCompactViewOffsetEnter" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                <ToolkitBehaviors:Offset x:Name="categoryCompactViewOffsetExit"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="-12" OffsetY="-24"  EasingMode="EaseOut"   EasingType="Cubic"/>
            </Interactivity:Interaction.Behaviors>

            <Grid/>
            <Grid/>
            <Grid/>
            <Grid/>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="model:Category">
                    <Grid Height="170px" 
                          CornerRadius="24"
                          Background="{ThemeResource ItemBackgroundThemeBrush}"
                          VerticalAlignment="Stretch" 
                          HorizontalAlignment="Stretch"
                          Width="169.5px">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="PointerEntered">

                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryTitleOffsetRight}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryDescriptionOffsetRight}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryDescriptionFadeOut}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryIconScaleUp}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=chevOffsetRight}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=chevFadeIn}" MethodName="StartAnimation"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerExited">
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryTitleOffsetLeft}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryDescriptionOffsetLeft}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryDescriptionFadeIn}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=categoryIconScaleDown}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=chevOffsetLeft}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=chevFadeOut}" MethodName="StartAnimation"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>

                        <!--<Controls:DropShadowPanel BlurRadius="12.0" ShadowOpacity="0.08" OffsetX="6.0" OffsetY="12.0" Color="Black"
                                                                  Visibility="{Binding ElementName=page, Path=DataContext, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                            <Rectangle Fill="{ThemeResource ItemBackgroundThemeBrush}" Width="170" Height="170" RadiusX="24" RadiusY="24"/>
                        </Controls:DropShadowPanel>-->
                        <Grid Margin="16 32 16 16" VerticalAlignment="Bottom">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            
                            <TextBlock Text="{Binding Description}"
                                       Grid.Row="1"
                                       FontSize="13px"
                                       Foreground="{ThemeResource ItemSecondaryForeground}"
                                       FontWeight="Normal"
                                       TextWrapping="WrapWholeWords">
                                <Interactivity:Interaction.Behaviors>
                                <ToolkitBehaviors:Offset x:Name="categoryDescriptionOffsetRight" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="4" EasingMode="EaseOut" EasingType="Cubic" />
                                <ToolkitBehaviors:Offset x:Name="categoryDescriptionOffsetLeft"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                              <ToolkitBehaviors:Fade x:Name="categoryDescriptionFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                <ToolkitBehaviors:Fade x:Name="categoryDescriptionFadeOut"  Duration="300" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                            </Interactivity:Interaction.Behaviors>
                            </TextBlock>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Interactivity:Interaction.Behaviors>
                                    <ToolkitBehaviors:Offset x:Name="categoryTitleOffsetRight" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="24" EasingMode="EaseOut"  EasingType="Cubic" />
                                    <ToolkitBehaviors:Offset x:Name="categoryTitleOffsetLeft"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                </Interactivity:Interaction.Behaviors>
                                <TextBlock Text="{Binding Title}"
                                           VerticalAlignment="Center"
                                           FontSize="17px"
                                           Foreground="{ThemeResource ItemPrimaryForeground}"
                                           FontWeight="Bold"
                                           TextTrimming="CharacterEllipsis">

                                </TextBlock>
                                <Image Grid.Column="1" Height="10px" Margin="16 6 0 0" Source="/Assets/chevron.png" VerticalAlignment="Center" Opacity="0">
                                    <Interactivity:Interaction.Behaviors>
                                        <ToolkitBehaviors:Offset x:Name="chevOffsetRight" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="-10" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                        <ToolkitBehaviors:Offset x:Name="chevOffsetLeft"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="-10" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                        <ToolkitBehaviors:Fade x:Name="chevFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                        <ToolkitBehaviors:Fade x:Name="chevFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                    </Interactivity:Interaction.Behaviors>
                                </Image>
                            </Grid>
                        </Grid>
                        <Grid Background="{ThemeResource SecondaryItemBackgroundAltThemeBrush}"
                              CornerRadius="12"
                              Height="48px"
                              HorizontalAlignment="Left"
                              Margin="16"
                              VerticalAlignment="Top"
                              Width="48px">
                            <Interactivity:Interaction.Behaviors>
                                <ToolkitBehaviors:Scale x:Name="categoryIconScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.2" ScaleY="1.2" CenterX="24" CenterY="24" EasingMode="EaseOut"  EasingType="Cubic" />
                                <ToolkitBehaviors:Scale x:Name="categoryIconScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="24" CenterY="24" EasingMode="EaseOut"   EasingType="Cubic"/>
                            </Interactivity:Interaction.Behaviors>
                            <Image Width="20px" VerticalAlignment="Center" HorizontalAlignment="Center" Source="{Binding IconPath}" Stretch="Uniform"/>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <ItemsWrapGrid/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>
        </ListView>

        <StackPanel Margin="96 0 0 32" Orientation="Horizontal"
                    VerticalAlignment="Bottom"
                    HorizontalAlignment="Left"
                    Grid.RowSpan="10"
                    Visibility="{Binding IsCompactCategory, Converter={StaticResource BoolToVisibilityInverseConverter}}">
            <Grid Margin="0 0 12 0">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE793;" FontSize="14" Visibility="{Binding IsDarkThemeEnabled, Converter={StaticResource BoolToVisibilityInverseConverter}}"/>
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="" FontSize="14" Visibility="{Binding IsDarkThemeEnabled, Converter={StaticResource BoolToVisibilityConverter}}"/>
            </Grid>
            <ToggleSwitch Style="{StaticResource ToggleSwitchStyle1}" IsOn="{Binding IsDarkThemeEnabled, Mode=TwoWay}" OffContent="" OnContent="" Width="44" BackgroundSizing="InnerBorderEdge"/>
        </StackPanel>

        <CheckBox IsChecked="{Binding IsCompactCategory}" Visibility="Collapsed">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Checked">
                    <Core:CallMethodAction TargetObject="{Binding ElementName=PageSearchOffsetEnter}" MethodName="StartAnimation"/>

                    <Core:CallMethodAction TargetObject="{Binding ElementName=categoryCompactViewFadeIn}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=categoryCompactViewOffsetEnter}" MethodName="StartAnimation"/>

                    <Core:CallMethodAction TargetObject="{Binding ElementName=CategoryViewScaleUp}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=CategoryViewFadeOut}" MethodName="StartAnimation"/>

                    <Core:CallMethodAction TargetObject="{Binding ElementName=pageTitleFadeIn}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=pageTitleOffsetEnter}" MethodName="StartAnimation"/>

                    <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistsContentViewFadeIn}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistsContentViewOffsetEnter}" MethodName="StartAnimation"/>
                </Core:EventTriggerBehavior>
                <Core:EventTriggerBehavior EventName="Unchecked">
                    <Core:CallMethodAction TargetObject="{Binding ElementName=PageSearchOffsetExit}" MethodName="StartAnimation"/>

                    <Core:CallMethodAction TargetObject="{Binding ElementName=categoryCompactViewFadeOut}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=categoryCompactViewOffsetExit}" MethodName="StartAnimation"/>

                    <Core:CallMethodAction TargetObject="{Binding ElementName=CategoryViewScaleDown}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=CategoryViewFadeIn}" MethodName="StartAnimation"/>

                    <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistsContentViewFadeOut}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=pageTitleFadeOut}" MethodName="StartAnimation"/>

                    <Core:CallMethodAction TargetObject="{Binding ElementName=pageTitleOffsetExit}" MethodName="StartAnimation"/>
                    <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistsContentViewOffsetExit}" MethodName="StartAnimation"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </CheckBox>

        <Grid x:Name="PageTitle"
              Grid.Column="1"
              Visibility="{Binding IsCompactCategory, Converter={StaticResource BoolToVisibilityConverter}}">
            <Interactivity:Interaction.Behaviors>
                <ToolkitBehaviors:Fade x:Name="pageTitleFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                <ToolkitBehaviors:Fade x:Name="pageTitleFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                <ToolkitBehaviors:Offset x:Name="pageTitleOffsetEnter" Duration="300" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                <ToolkitBehaviors:Offset x:Name="pageTitleOffsetExit"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="-24"  EasingMode="EaseOut"   EasingType="Cubic"/>
            </Interactivity:Interaction.Behaviors>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding PageTitle, FallbackValue=Manage Playlists}"
                       FontSize="56"
                       FontWeight="Bold"
                       Margin="0 0 0 8"
                       TextTrimming="CharacterEllipsis"
                       VerticalAlignment="Center"/>
            <Button x:Name="CloseButton"
                    Command="{Binding CloseButtonCommand}"
                    Foreground="{ThemeResource ItemPrimaryForeground}"
                    extensions:Mouse.Cursor="Hand"
                    Grid.Column="1"
                    Height="48px"
                    Width="48px"
                    HorizontalContentAlignment="Center"
                    Margin="0 12 0 0"
                    VerticalContentAlignment="Center"
                    VerticalAlignment="Center"
                    Style="{StaticResource TextBlockButtonStyle}"
                    ToolTipService.ToolTip="Close">

                <Interactivity:Interaction.Behaviors>
                    <ToolkitBehaviors:Scale x:Name="closeButtonScaleUp" Duration="400" Delay="0" AutomaticallyStart="False" ScaleX="1.1" ScaleY="1.1" CenterX="24" CenterY="24" EasingMode="EaseOut"  EasingType="Cubic" />
                    <ToolkitBehaviors:Scale x:Name="closeButtonScaleDown"  Duration="400" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="24" CenterY="24" EasingMode="EaseOut"   EasingType="Cubic"/>

                    <Core:EventTriggerBehavior EventName="PointerEntered">
                        <Core:CallMethodAction TargetObject="{Binding ElementName=closeButtonScaleUp}" MethodName="StartAnimation"/>
                    </Core:EventTriggerBehavior>
                    <Core:EventTriggerBehavior EventName="PointerExited">
                        <Core:CallMethodAction TargetObject="{Binding ElementName=closeButtonScaleDown}" MethodName="StartAnimation"/>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>

                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE711;"/>
            </Button>
        </Grid>
        <Grid x:Name="PlaylistsContentView" 
              Grid.Row="1"
              Visibility="{Binding IsPlaylistView, Converter={StaticResource BoolToVisibilityConverter}}"
              Grid.Column="1"
              Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition MinWidth="320" Width="*"/>
            </Grid.ColumnDefinitions>
            <Interactivity:Interaction.Behaviors>
                <ToolkitBehaviors:Fade x:Name="PlaylistsContentViewFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                <ToolkitBehaviors:Fade x:Name="PlaylistsContentViewFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                <ToolkitBehaviors:Offset x:Name="PlaylistsContentViewOffsetEnter" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                <ToolkitBehaviors:Offset x:Name="PlaylistsContentViewOffsetExit"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="48"  EasingMode="EaseOut"   EasingType="Cubic"/>
            </Interactivity:Interaction.Behaviors>

            <Grid x:Name="PageSubTitle" Height="60" Margin="0 0 104 0" Grid.ColumnSpan="2" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                            DataContext="{Binding SelectedPlaylistCategory}">
                    <TextBlock Text="{Binding Title, FallbackValue=Items}" 
                                FontSize="24"
                                FontWeight="Bold"
                                Margin="4 0 8 0"/>
                    <StackPanel Orientation="Horizontal"
                                Margin="0 0 0 0">
                        <TextBlock Text="{Binding Count, FallbackValue=0}"
                                FontSize="24"
                                FontWeight="Normal"
                                Foreground="{StaticResource Grey-04}"
                                VerticalAlignment="Center"/>
                        <TextBlock Text="("
                                FontSize="24"
                                FontWeight="Normal"
                                Foreground="{StaticResource Grey-04}"
                                Margin="4 0 0 0"
                                VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding TracksCount, FallbackValue=0}"
                                FontSize="24"
                                FontWeight="Normal"
                                Foreground="{StaticResource Grey-04}"
                                VerticalAlignment="Center"/>
                        <TextBlock Text="tracks"
                                FontSize="24"
                                FontWeight="Normal"
                                Foreground="{StaticResource Grey-04}"
                                Margin="2 0 0 0"
                                VerticalAlignment="Center"/>
                        <TextBlock Text=")"
                                FontSize="24"
                                FontWeight="Normal"
                                Foreground="{StaticResource Grey-04}"
                                VerticalAlignment="Center"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <TextBlock Text="Select All"
                                FontSize="15"
                                Margin="0 0 16 0"
                                VerticalAlignment="Center"/>
                    <ToggleSwitch Style="{StaticResource ToggleSwitchStyle1}" IsOn="{Binding IsSelectAllChecked, Mode=TwoWay}" OffContent="" OnContent="" Width="44" BackgroundSizing="InnerBorderEdge"/>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1"
                  Grid.ColumnSpan="2"
                  Margin="0 0 0 0">
                <ListView x:Name="PlaylistContentView"
                          Padding="0 0 64 0"
                          ItemsSource="{Binding AdvancedCollectionView}"
                          Margin="0" 
                          extensions:ScrollViewerExtensions.VerticalScrollBarMargin="2, 2, 2, 2"
                          ItemContainerStyle="{StaticResource PlaylistViewItemContainerStyle}">
                    <Grid/>
                    <Grid/>
                    <Grid/>
                    <Grid/>
                    <!--ItemsSource="{Binding MyPlaylistSource}"-->
                    <ListView.Header>
                        <Controls:ScrollHeader Mode="QuickReturn">
                            <Grid>
                                <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition MinWidth="320" Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.BackgroundTransition>
                                        <BrushTransition />
                                    </Grid.BackgroundTransition>
                                    <Grid x:Name="PageNav"
                                          Height="60px"
                                          Margin="0 12 0 0"
                                          VerticalAlignment="Top">
                                        <ListView x:Name="PlaylistCategoriesView"
                                                  SelectionMode="Single"
                                                  SelectedItem="{Binding SelectedPlaylistCategory, Mode=TwoWay}"
                                                  ScrollViewer.VerticalScrollMode="Auto"
                                                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                                  ItemsSource="{Binding PlaylistCategoryList}" 
                                                  ItemContainerStyle="{StaticResource MenuCategoryContainerStyle}">

                                            <Grid/>
                                            <Grid/>
                                            <Grid/>
                                            <ListView.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <ItemsStackPanel Orientation="Horizontal"/>
                                                </ItemsPanelTemplate>
                                            </ListView.ItemsPanel>
                                            <ListView.ItemTemplate>
                                                <DataTemplate x:DataType="model:PlaylistCategory">
                                                    <Grid>
                                                        <Interactivity:Interaction.Behaviors>
                                                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistCategoryItemOffsetAA}" MethodName="StartAnimation"/>
                                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistCategoryItemOffsetB}" MethodName="StartAnimation"/>

                                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistCategoryItemFadeOutA}" MethodName="StartAnimation"/>
                                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistCategoryItemFadeInB}" MethodName="StartAnimation"/>
                                                            </Core:EventTriggerBehavior>
                                                            <Core:EventTriggerBehavior EventName="PointerExited">
                                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistCategoryItemOffsetA}" MethodName="StartAnimation"/>
                                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistCategoryItemOffsetBB}" MethodName="StartAnimation"/>

                                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistCategoryItemFadeInA}" MethodName="StartAnimation"/>
                                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistCategoryItemFadeOutB}" MethodName="StartAnimation"/>
                                                            </Core:EventTriggerBehavior>
                                                        </Interactivity:Interaction.Behaviors>

                                                        <Grid Padding="16 0" Background="Transparent" Opacity="0">
                                                            <Interactivity:Interaction.Behaviors>
                                                                <ToolkitBehaviors:Offset x:Name="PlaylistCategoryItemOffsetB" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                                                <ToolkitBehaviors:Offset x:Name="PlaylistCategoryItemOffsetBB"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="8"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                                                <ToolkitBehaviors:Fade x:Name="PlaylistCategoryItemFadeInB" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                                                <ToolkitBehaviors:Fade x:Name="PlaylistCategoryItemFadeOutB"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                                            </Interactivity:Interaction.Behaviors>
                                                            <StackPanel Orientation="Horizontal" 
                                                                    
                                                                    HorizontalAlignment="Center"
                                                                    MinWidth="24"
                                                                    VerticalAlignment="Center">

                                                                <TextBlock Text="{Binding Count, FallbackValue=0}" FontSize="12"/>
                                                                <TextBlock Text="Playlists" FontSize="12" Margin="2,0,0,0"/>
                                                            </StackPanel>
                                                        </Grid>
                                                        <Grid Padding="16 0" Background="Transparent">
                                                            <Interactivity:Interaction.Behaviors>
                                                                <ToolkitBehaviors:Offset x:Name="PlaylistCategoryItemOffsetA" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                                                <ToolkitBehaviors:Offset x:Name="PlaylistCategoryItemOffsetAA"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="-8"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                                                <ToolkitBehaviors:Fade x:Name="PlaylistCategoryItemFadeInA" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                                                <ToolkitBehaviors:Fade x:Name="PlaylistCategoryItemFadeOutA"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                                            </Interactivity:Interaction.Behaviors>
                                                            <TextBlock Text="{Binding Title, FallbackValue=Made For You}" FontSize="14" FontWeight="Normal" VerticalAlignment="Center">
                                                            </TextBlock>
                                                        </Grid>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListView.ItemTemplate>
                                        </ListView>
                                    </Grid>
                                    <Grid x:Name="PageSearch" 
                                          Height="72"
                                          Grid.Row="1" 
                                          Margin="0 0 0 20">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" MaxWidth="504"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Interactivity:Interaction.Behaviors>
                                            <ToolkitBehaviors:Offset x:Name="PageSearchOffsetEnter" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Offset x:Name="PageSearchOffsetExit"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="24" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                        </Interactivity:Interaction.Behaviors>

                                        <Grid Margin="0 0 8 0">
                                            <!--<TextBox x:Name="SearchBox"
                                                     Padding="12 8" 
                                                     PlaceholderForeground="#19FFFFFF"
                                                     PlaceholderText="Filter by playlist title or owner"
                                                     TextChanged="SearchBox_TextChanged"
                                                     Text="{Binding SearchText, Mode=TwoWay}"
                                                     SelectionHighlightColor="{ThemeResource BrandColorThemeBrush}"
                                                     VerticalContentAlignment="Center"
                                                     Background="{ThemeResource InputBoxThemeBrush}"
                                                     BorderThickness="0"
                                                     CornerRadius="12"
                                                     Height="48px"
                                                     FontSize="20"
                                                     Width="504"
                                                     HorizontalAlignment="Left"
                                                     Style="{StaticResource TextBoxStyle1}"/>-->

                                            <AutoSuggestBox Style="{StaticResource AutoSuggestBoxStyle1}" x:Name="SearchBox"
                                                            PlaceholderText="Search playlists by name or author"
                                                            Text="{Binding SearchText, Mode=TwoWay, FallbackValue=Hello }"   
                                                            Padding="12 12 12 0"
                                                            QueryIcon="Find"
                                                            Height="48"
                                                            ItemsSource="{Binding SearchSuggestionCollection}"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Stretch"
                                                            QuerySubmitted="SearchBox_QuerySubmitted"
                                                            SuggestionChosen="SearchBox_SuggestionChosen"
                                                            DisplayMemberPath="Title"/>
                                        </Grid>
                                        <!--<Button x:Name="SearchButton"
                                                extensions:Mouse.Cursor="Hand"
                                                Background="{ThemeResource SecondaryItemBackgroundAltThemeBrush}"
                                                Grid.Column="1"
                                                CornerRadius="12"
                                                Height="48px"
                                                Width="48px" Foreground="#FF676767" 
                                                Style="{StaticResource ButtonRevealStyle}">
                                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE721;"/>
                                        </Button>-->
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Controls:ScrollHeader>
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:Playlist">
                            <!--<Grid extensions:Mouse.Cursor="Hand"
                                        Width="250" Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="250"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="PointerEntered">
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistTitleOffsetUp}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistDescriptionOffsetDown}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistMetaFadeIn}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistThumbScaleUp}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistMetaOffsetX}" MethodName="StartAnimation"/>
                                    </Core:EventTriggerBehavior>
                                    <Core:EventTriggerBehavior EventName="PointerExited">
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistTitleOffsetX}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistDescriptionOffsetX}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistMetaFadeOut}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistThumbScaleDown}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistMetaOffsetY}" MethodName="StartAnimation"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                                <Grid CornerRadius="24"
                                      Height="250"
                                      Width="250"
                                      VerticalAlignment="Top">
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="PointerEntered">
                                            <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistViewPlayBtnFadeIn}" MethodName="StartAnimation"/>
                                        </Core:EventTriggerBehavior>
                                        <Core:EventTriggerBehavior EventName="PointerExited">
                                            <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistViewPlayBtnFadeOut}" MethodName="StartAnimation"/>
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>

                                    <Grid CornerRadius="24" Background="{ThemeResource ItemBackgroundThemeBrush}">
                                        <Interactivity:Interaction.Behaviors>
                                            <ToolkitBehaviors:Scale x:Name="playlistThumbScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="0.95" ScaleY="0.95" CenterX="125" CenterY="125" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Scale x:Name="playlistThumbScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="125" CenterY="125" EasingMode="EaseOut"   EasingType="Cubic"/>
                                        </Interactivity:Interaction.Behaviors>
                                        <Image Source="{Binding Image}" Stretch="UniformToFill"/>
                                    </Grid>
                                    <StackPanel Margin="16"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top">
                                        <Grid>
                                            <Button Background="#000000"
                                                    CornerRadius="24"
                                                    Foreground="#ffffff"
                                                    RequestedTheme="Dark"
                                                    Command="{Binding ElementName=PlaylistContentView, Path=DataContext.AddPlaylistToSelectedCommand}"
                                                    CommandParameter="{Binding}"
                                                    Height="32"
                                                    HorizontalContentAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    Width="32"
                                                    Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" Style="{StaticResource ButtonRevealStyle}">
                                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE710;" FontSize="12"/>
                                            </Button>
                                            <Button Background="{ThemeResource BrandColorThemeBrush}"
                                                    CornerRadius="24"
                                                    Foreground="#ffffff"
                                                    RequestedTheme="Dark"
                                                    Command="{Binding ElementName=PlaylistContentView, Path=DataContext.RemovePlaylistToSelectedCommand}"
                                                    CommandParameter="{Binding}"
                                                    Height="32"
                                                    Padding="0"
                                                    HorizontalContentAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    Width="32"
                                                    Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}">
                                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE73E;" FontSize="18"/>
                                            </Button>
                                        </Grid>
                                        <Button Background="#000000"
                                                CornerRadius="24"
                                                Foreground="#ffffff"
                                                Height="32"
                                                RequestedTheme="Dark"
                                                HorizontalContentAlignment="Center"
                                                Margin="0 8 0 0"
                                                VerticalContentAlignment="Center"
                                                Width="32" Style="{StaticResource ButtonRevealStyle}">
                                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE70F;" FontSize="12"/>
                                        </Button>
                                    </StackPanel>
                                    <Button x:Name="PlaylistViewPlayBtn" BorderThickness="2" 
                                                Background="{x:Null}" Opacity="0"
                                                BorderBrush="WhiteSmoke"
                                                Foreground="WhiteSmoke"
                                                RequestedTheme="Dark"
                                                CornerRadius="48"
                                                Command="{Binding ElementName=page, Path=DataContext.PlayPlaylistCommand}"
                                                CommandParameter="{Binding}"
                                                Padding="0"
                                            Margin="24"
                                                Height="32"
                                                Width="32"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Bottom">
                                        <Interactivity:Interaction.Behaviors>
                                            <ToolkitBehaviors:Scale x:Name="PlaylistViewPlayBtnScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.2" ScaleY="1.2" CenterX="16" CenterY="16" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Scale x:Name="PlaylistViewPlayBtnScaleNormal"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="16" CenterY="16" EasingMode="EaseOut"   EasingType="Cubic"/>
                                            <ToolkitBehaviors:Fade x:Name="PlaylistViewPlayBtnFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                            <ToolkitBehaviors:Fade x:Name="PlaylistViewPlayBtnFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />

                                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistViewPlayBtnScaleUp}" MethodName="StartAnimation"/>
                                            </Core:EventTriggerBehavior>
                                            <Core:EventTriggerBehavior EventName="PointerExited">
                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistViewPlayBtnScaleNormal}" MethodName="StartAnimation"/>
                                            </Core:EventTriggerBehavior>
                                        </Interactivity:Interaction.Behaviors>

                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE768;"/>
                                    </Button>
                                </Grid>
                                <StackPanel Grid.Row="1"
                                            Margin="8 16 0 0">
                                    <Grid Opacity="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Interactivity:Interaction.Behaviors>
                                            <ToolkitBehaviors:Fade x:Name="playlistMetaFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                            <ToolkitBehaviors:Fade x:Name="playlistMetaFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Offset x:Name="playlistMetaOffsetX" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="-8" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Offset x:Name="playlistMetaOffsetY"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                        </Interactivity:Interaction.Behaviors>
                                        <TextBlock Text="by " FontSize="14" Margin="0 0 2 0"/>
                                        <TextBlock Text="{Binding Owner, FallbackValue=Unknown}" Grid.Column="1" FontSize="14" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
                                        <StackPanel Grid.Column="2" Margin="8 0" Orientation="Horizontal">
                                            <Ellipse Fill="{ThemeResource ItemPrimaryForeground}" Opacity="0.4" Height="4" Width="4" VerticalAlignment="Center" Margin="0 0 8 0"/>
                                            <TextBlock Text="{Binding ItemsCount, FallbackValue=0}" FontSize="14" Foreground="{ThemeResource ItemSecondaryForeground}"/>
                                        </StackPanel>
                                    </Grid>
                                    <TextBlock Text="{Binding Title, FallbackValue=Unknown}"
                                               FontSize="24"
                                               FontWeight="Bold"
                                               TextWrapping="NoWrap"
                                               TextTrimming="CharacterEllipsis" 
                                               ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}">
                                        <Interactivity:Interaction.Behaviors>
                                            <ToolkitBehaviors:Offset x:Name="playlistTitleOffsetUp" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="-8" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Offset x:Name="playlistTitleOffsetX"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                        </Interactivity:Interaction.Behaviors>
                                    </TextBlock>

                                    <TextBlock Text="{Binding Description}"
                                               FontSize="14" Margin="0 0 0 0"
                                               Height="40"
                                               TextWrapping="WrapWholeWords"
                                               TextTrimming="CharacterEllipsis"
                                               Foreground="{ThemeResource ItemSecondaryForeground}"
                                               ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}">
                                        
                                        <Interactivity:Interaction.Behaviors>
                                            <ToolkitBehaviors:Offset x:Name="playlistDescriptionOffsetDown" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="-8" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Offset x:Name="playlistDescriptionOffsetX"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                        </Interactivity:Interaction.Behaviors>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>-->                 
                            <Grid extensions:Mouse.Cursor="Hand"
                                        Width="250" Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="250"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="PointerEntered">
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistShadowScaleDown}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistTitleOffsetUp}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistDescriptionOffsetDown}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistMetaFadeIn}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistThumbScaleUp}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistMetaOffsetX}" MethodName="StartAnimation"/>
                                    </Core:EventTriggerBehavior>
                                    <Core:EventTriggerBehavior EventName="PointerExited">
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistShadowScaleUp}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistTitleOffsetX}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistDescriptionOffsetX}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistMetaFadeOut}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistThumbScaleDown}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=playlistMetaOffsetY}" MethodName="StartAnimation"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                                <Grid Height="250" Width="250" VerticalAlignment="Top">
                                        <Interactivity:Interaction.Behaviors>
                                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistViewPlayBtnFadeIn}" MethodName="StartAnimation"/>
                                            </Core:EventTriggerBehavior>
                                            <Core:EventTriggerBehavior EventName="PointerExited">
                                                <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistViewPlayBtnFadeOut}" MethodName="StartAnimation"/>
                                            </Core:EventTriggerBehavior>
                                        </Interactivity:Interaction.Behaviors>

                                        <Controls:DropShadowPanel BlurRadius="12.0" ShadowOpacity="0.08" OffsetX="6.0" OffsetY="12.0" Color="Black"
                                                                  Visibility="{Binding ElementName=page, Path=DataContext, Converter={StaticResource BoolToVisibilityInverseConverter}}">
                                            <Interactivity:Interaction.Behaviors>
                                                <ToolkitBehaviors:Scale x:Name="playlistShadowScaleDown" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="0.95" ScaleY="0.95" CenterX="125" CenterY="125" EasingMode="EaseOut"  EasingType="Cubic" />
                                                <ToolkitBehaviors:Scale x:Name="playlistShadowScaleUp"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="125" CenterY="125" EasingMode="EaseOut"   EasingType="Cubic"/>
                                            </Interactivity:Interaction.Behaviors>
                                            
                                            <Rectangle Fill="{ThemeResource ItemBackgroundThemeBrush}"  
                                                       Width="250"
                                                       Height="250"
                                                       RadiusX="24"
                                                       RadiusY="24"/>
                                            </Controls:DropShadowPanel>

                                        <Grid CornerRadius="24" Background="Transparent">
                                            <Interactivity:Interaction.Behaviors>
                                                <ToolkitBehaviors:Scale x:Name="playlistThumbScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="0.95" ScaleY="0.95" CenterX="125" CenterY="125" EasingMode="EaseOut"  EasingType="Cubic" />
                                                <ToolkitBehaviors:Scale x:Name="playlistThumbScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="125" CenterY="125" EasingMode="EaseOut"   EasingType="Cubic"/>
                                            </Interactivity:Interaction.Behaviors>
                                            <Image Source="{Binding Image}" Stretch="UniformToFill"/>
                                        </Grid>
                                        <StackPanel Margin="16"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Top">
                                            <Grid>
                                                <Button Background="#000000"
                                                    CornerRadius="24"
                                                    Foreground="#ffffff"
                                                    RequestedTheme="Dark"
                                                    Command="{Binding ElementName=PlaylistContentView, Path=DataContext.AddPlaylistToSelectedCommand}"
                                                    CommandParameter="{Binding}"
                                                    Height="32"
                                                    HorizontalContentAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    Width="32"
                                                    Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}" Style="{StaticResource ButtonRevealStyle}">
                                                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE710;" FontSize="12"/>
                                                </Button>
                                                <Button Background="{ThemeResource BrandColorThemeBrush}"
                                                    CornerRadius="24"
                                                    Foreground="#ffffff"
                                                    RequestedTheme="Dark"
                                                    Command="{Binding ElementName=PlaylistContentView, Path=DataContext.RemovePlaylistToSelectedCommand}"
                                                    CommandParameter="{Binding}"
                                                    Height="32"
                                                    Padding="0"
                                                    HorizontalContentAlignment="Center"
                                                    VerticalContentAlignment="Center"
                                                    Width="32"
                                                    Visibility="{Binding Path=IsSelected, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}">
                                                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE73E;" FontSize="18"/>
                                                </Button>
                                            </Grid>
                                            <Button Background="#000000"
                                                CornerRadius="24"
                                                Foreground="#ffffff"
                                                Height="32"
                                                RequestedTheme="Dark"
                                                HorizontalContentAlignment="Center"
                                                Margin="0 8 0 0"
                                                VerticalContentAlignment="Center"
                                                Width="32" Style="{StaticResource ButtonRevealStyle}">
                                                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE70F;" FontSize="12"/>
                                            </Button>
                                        </StackPanel>
                                        <Button x:Name="PlaylistViewPlayBtn" BorderThickness="2" 
                                                Background="{x:Null}" Opacity="0"
                                                BorderBrush="WhiteSmoke"
                                                Foreground="WhiteSmoke"
                                                RequestedTheme="Dark"
                                                CornerRadius="48"
                                                Command="{Binding ElementName=page, Path=DataContext.PlayPlaylistCommand}"
                                                CommandParameter="{Binding}"
                                                Padding="0"
                                            Margin="24"
                                                Height="32"
                                                Width="32"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Bottom">
                                            <Interactivity:Interaction.Behaviors>
                                                <ToolkitBehaviors:Scale x:Name="PlaylistViewPlayBtnScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.2" ScaleY="1.2" CenterX="16" CenterY="16" EasingMode="EaseOut"  EasingType="Cubic" />
                                                <ToolkitBehaviors:Scale x:Name="PlaylistViewPlayBtnScaleNormal"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="16" CenterY="16" EasingMode="EaseOut"   EasingType="Cubic"/>
                                                <ToolkitBehaviors:Fade x:Name="PlaylistViewPlayBtnFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                                <ToolkitBehaviors:Fade x:Name="PlaylistViewPlayBtnFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />

                                                <Core:EventTriggerBehavior EventName="PointerEntered">
                                                    <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistViewPlayBtnScaleUp}" MethodName="StartAnimation"/>
                                                </Core:EventTriggerBehavior>
                                                <Core:EventTriggerBehavior EventName="PointerExited">
                                                    <Core:CallMethodAction TargetObject="{Binding ElementName=PlaylistViewPlayBtnScaleNormal}" MethodName="StartAnimation"/>
                                                </Core:EventTriggerBehavior>
                                            </Interactivity:Interaction.Behaviors>

                                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE768;"/>
                                        </Button>
                                    </Grid>
                                    <StackPanel Grid.Row="1"
                                            Margin="8 16 0 0">
                                    <Grid Opacity="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Interactivity:Interaction.Behaviors>
                                            <ToolkitBehaviors:Fade x:Name="playlistMetaFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                            <ToolkitBehaviors:Fade x:Name="playlistMetaFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Offset x:Name="playlistMetaOffsetX" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="-8" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Offset x:Name="playlistMetaOffsetY"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                        </Interactivity:Interaction.Behaviors>
                                        <TextBlock Text="by " FontSize="14" Margin="0 0 2 0"/>
                                        <TextBlock Text="{Binding Owner, FallbackValue=Unknown}" Grid.Column="1" FontSize="14" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
                                        <StackPanel Grid.Column="2" Margin="8 0" Orientation="Horizontal">
                                            <Ellipse Fill="{ThemeResource ItemPrimaryForeground}" Opacity="0.4" Height="4" Width="4" VerticalAlignment="Center" Margin="0 0 8 0"/>
                                            <TextBlock Text="{Binding ItemsCount, FallbackValue=0}" FontSize="14" Foreground="{ThemeResource ItemSecondaryForeground}"/>
                                        </StackPanel>
                                    </Grid>
                                    <TextBlock Text="{Binding Title, FallbackValue=Unknown}"
                                               FontSize="24"
                                               FontWeight="Bold"
                                               TextWrapping="NoWrap"
                                               TextTrimming="CharacterEllipsis" 
                                               ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}">
                                        <Interactivity:Interaction.Behaviors>
                                            <ToolkitBehaviors:Offset x:Name="playlistTitleOffsetUp" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="-8" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Offset x:Name="playlistTitleOffsetX"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                        </Interactivity:Interaction.Behaviors>
                                    </TextBlock>

                                    <TextBlock Text="{Binding Description}"
                                               FontSize="14" Margin="0 0 0 0"
                                               Height="40"
                                               TextWrapping="WrapWholeWords"
                                               TextTrimming="CharacterEllipsis"
                                               Foreground="{ThemeResource ItemSecondaryForeground}"
                                               ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}">
                                        
                                        <Interactivity:Interaction.Behaviors>
                                            <ToolkitBehaviors:Offset x:Name="playlistDescriptionOffsetDown" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="-8" EasingMode="EaseOut"  EasingType="Cubic" />
                                            <ToolkitBehaviors:Offset x:Name="playlistDescriptionOffsetX"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                        </Interactivity:Interaction.Behaviors>
                                    </TextBlock>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>

            </Grid>
            <ListView x:Name="AlphabetPlaylistView"
                      Grid.RowSpan="10"
                      Grid.ColumnSpan="10"
                      Padding="0 10"
                      CornerRadius="8"
                      ItemsSource="{Binding Alphabet}"
                      IsItemClickEnabled="False"
                      SelectionMode="Single"
                      SelectedItem="{Binding SelectedPlaylistAlphabet, Mode=TwoWay}"
                      Width="58"
                      Foreground="{ThemeResource ItemPrimaryForeground}"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      HorizontalContentAlignment="Center"
                      VerticalContentAlignment="Center"
                      ScrollViewer.VerticalScrollBarVisibility="Hidden"
                      Margin="0 24 32 0" 
                      ItemContainerStyle="{StaticResource AlphabetListViewItemContainerStyle}"
                      Visibility="{Binding IsCompactCategory, Converter={StaticResource BoolToVisibilityConverter}}">

                <Grid/>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Border Background="{ThemeResource BrandColorThemeBrush}"
                                    CornerRadius="8" Opacity="0"
                                    Margin="0"
                                    Width="24"
                                    Height="24">
                                <Interactivity:Interaction.Behaviors>
                                    <ToolkitBehaviors:Offset x:Name="letterBubbleOffsetX" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                    <ToolkitBehaviors:Offset x:Name="letterBubbleOffsetXX"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="6" OffsetY="0"  EasingMode="EaseOut"   EasingType="Cubic"/>
                                    <ToolkitBehaviors:Fade x:Name="letterBubbleFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                                    <ToolkitBehaviors:Fade x:Name="letterBubbleFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
                                    <ToolkitBehaviors:Scale x:Name="letterBubbleScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="16" CenterY="16" EasingMode="EaseOut"  EasingType="Cubic" />
                                    <ToolkitBehaviors:Scale x:Name="letterBubbleScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="0.8" ScaleY="0.8" CenterX="16" CenterY="16" EasingMode="EaseOut"   EasingType="Cubic"/>
                                </Interactivity:Interaction.Behaviors>

                                <TextBlock Text="{Binding}" Foreground="#ffffff" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Grid Background="Transparent" Height="20" Width="20" extensions:Mouse.Cursor="Hand" HorizontalAlignment="Right">
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="PointerEntered">
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=letterBubbleOffsetX}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=letterBubbleFadeIn}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=letterBubbleScaleUp}" MethodName="StartAnimation"/>
                                    </Core:EventTriggerBehavior>
                                    <Core:EventTriggerBehavior EventName="PointerExited">
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=letterBubbleOffsetXX}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=letterBubbleFadeOut}" MethodName="StartAnimation"/>
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=letterBubbleScaleDown}" MethodName="StartAnimation"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                                <TextBlock Text="{Binding}" FontWeight="Medium" FontSize="11" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>

        <Grid x:Name="PopupView"
              Grid.ColumnSpan="100"
              Grid.RowSpan="100"
              Visibility="{Binding IsPopupActive, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}">
            <Grid.Background>
                <media:AcrylicBrush
                      BackgroundSource="Backdrop"
                      TintColor="{ThemeResource TintColor}"
                      TintOpacity="0.95"
                      BlurAmount="12"/>

            </Grid.Background>

            <CheckBox Style="{StaticResource PopupDismissCheckBoxStyle}" 
                      IsChecked="{Binding IsPopupActive, Mode=TwoWay}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"/>
        </Grid>
        <Grid x:Name="SelectedPlaylistPanel" 
              extensions:Mouse.Cursor="Hand"
              Grid.Row="1"
              Grid.RowSpan="10" 
              Grid.ColumnSpan="100"
              Margin="24 0 0 24" Opacity="1" 
              VerticalAlignment="Bottom"
              Visibility="{Binding HasSelectedItems, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}">
            <!--Width="351"-->
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="405" Width="*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition MinWidth="320" Width="*"/>
            </Grid.ColumnDefinitions>
            <Interactivity:Interaction.Behaviors>
                <ToolkitBehaviors:Offset x:Name="SelectedPlaylistPanelOffsetX" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut"  EasingType="Cubic" />
                <ToolkitBehaviors:Offset x:Name="SelectedPlaylistPanelOffsetY"  Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="64"  EasingMode="EaseOut"   EasingType="Cubic"/>
                <ToolkitBehaviors:Fade x:Name="SelectedPlaylistPanelFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                <ToolkitBehaviors:Fade x:Name="SelectedPlaylistPanelFadeOut"  Duration="150" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />
            </Interactivity:Interaction.Behaviors>
            <CheckBox IsChecked="{Binding HasSelectedItems}" Visibility="Collapsed">
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="Checked">

                        <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistPanelOffsetX}" MethodName="StartAnimation"/>
                        <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistPanelFadeIn}" MethodName="StartAnimation"/>
                    </Core:EventTriggerBehavior>
                    <Core:EventTriggerBehavior EventName="Unchecked">
                        <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistPanelOffsetY}" MethodName="StartAnimation"/>
                        <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistPanelFadeOut}" MethodName="StartAnimation"/>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </CheckBox>

            <Grid Margin="0 0 0 16" Height="32" 
                  Width="{Binding ExpandedSelectPlaylistWidth, FallbackValue=352}"
                  HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock Text="Selected" 
                               Foreground="{ThemeResource ItemPrimaryForeground}"
                               FontSize="24"
                               FontWeight="Bold"
                               Margin="8 0 0 0"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="(" FontSize="24" Foreground="{StaticResource Grey-04}" VerticalAlignment="Center" Margin="4 0 0 0"/>
                        <TextBlock Text="{Binding SelectedPlaylistCollection.Count, FallbackValue=0}" FontSize="24" Foreground="{StaticResource Grey-04}" VerticalAlignment="Center"/>
                        <TextBlock Text=")" FontSize="24" Foreground="{StaticResource Grey-04}" VerticalAlignment="Center" Margin="2 0 0 0"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button extensions:Mouse.Cursor="Hand"
                            Foreground="{ThemeResource ItemPrimaryForeground}"
                            Command="{Binding ClearPlaylistToSelectedCommand}"
                            Grid.Column="1"
                            Height="32px"
                            Width="32px"
                            HorizontalContentAlignment="Center"
                            Margin="0"
                            Padding="0"
                            VerticalContentAlignment="Center"
                            VerticalAlignment="Center"
                            Style="{StaticResource TextBlockButtonStyle}"
                            ToolTipService.ToolTip="Clear selected">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE711;" FontSize="18"/>
                    </Button>
                    <Button Background="{ThemeResource SecondaryItemBackgroundAltThemeBrush}" CornerRadius="24" Grid.Column="1" Height="32" Margin="16 0 8 0" Width="32" Style="{StaticResource ButtonRevealStyle}"
                            Command="{Binding ToggleExpandedPlaylistSelectedCommand}"
                            CommandParameter="False"
                            ToolTipService.ToolTip="Collapse"
                            Visibility="{Binding IsSelectedPlaylistExpanded, Converter={StaticResource BoolToVisibilityConverter}}">
                        <Interactivity:Interaction.Behaviors>
                            <ToolkitBehaviors:Scale x:Name="SelectedPlaylistBtnScaleUp2" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.1" ScaleY="1.1" CenterX="16" CenterY="16" EasingMode="EaseOut"  EasingType="Cubic" />
                            <ToolkitBehaviors:Scale x:Name="SelectedPlaylistBtnScaleDown2"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="16" CenterY="16" EasingMode="EaseOut"   EasingType="Cubic"/>
                            <Core:EventTriggerBehavior EventName="PointerEntered">
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistBtn2ScaleUp}" MethodName="StartAnimation"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="PointerExited">
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistBtn2ScaleDown}" MethodName="StartAnimation"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE011;" FontSize="12" Margin="0 2 0 0"/>
                    </Button>
                </StackPanel>
            </Grid>
            <Grid x:Name="SelectedPlaylistExpandedContainer"
                  Grid.Row="1"
                  Grid.ColumnSpan="10"
                Visibility="{Binding IsSelectedPlaylistExpanded, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <CheckBox IsChecked="{Binding IsSelectedPlaylistExpanded}" Visibility="Collapsed">
                        <Interactivity:Interaction.Behaviors>
                            <Core:EventTriggerBehavior EventName="Checked">
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewButtonsOffsetA}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewButtonsFadeIn}" MethodName="StartAnimation"/>

                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewScaleUp}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewOffsetA}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewFadeIn}" MethodName="StartAnimation"/>

                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistCompactViewScaleDown}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistComapactViewOffsetA}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistCompactViewFadeIn}" MethodName="StartAnimation"/>
                            </Core:EventTriggerBehavior>
                            <Core:EventTriggerBehavior EventName="Unchecked">
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewButtonsOffsetB}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewButtonsFadeOut}" MethodName="StartAnimation"/>

                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewScaleDown}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewOffsetB}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewFadeOut}" MethodName="StartAnimation"/>

                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedComapactExpandedViewScaleNormal}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistCompactViewOffsetB}" MethodName="StartAnimation"/>
                                <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistExpandedViewButtonsFadeOut}" MethodName="StartAnimation"/>
                            </Core:EventTriggerBehavior>
                        </Interactivity:Interaction.Behaviors>
                    </CheckBox>

                    <ListView x:Name="SelectedPlaylistViewExpanded"
                              Background="Transparent"
                              HorizontalContentAlignment="Left"
                              ItemsSource="{Binding SelectedPlaylistCollection}"
                              SelectionMode="None" 
                              Margin="0 0 0 12"
                              ItemContainerStyle="{StaticResource ExpandedSelectedPlaylistContainerStyle}">
                        <Interactivity:Interaction.Behaviors>
                            <ToolkitBehaviors:Offset x:Name="SelectedPlaylistExpandedViewOffsetA" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut" EasingType="Cubic" />
                            <ToolkitBehaviors:Offset x:Name="SelectedPlaylistExpandedViewOffsetB" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="48" EasingMode="EaseOut" EasingType="Cubic" />
                            <ToolkitBehaviors:Fade x:Name="SelectedPlaylistExpandedViewFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                        </Interactivity:Interaction.Behaviors>

                        <Grid/>
                        <Grid/>
                        <Grid/>
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="model:Playlist">
                                <Grid Background="{ThemeResource ItemBackgroundThemeBrush}"
                                      Height="116"
                                      Width="{Binding ElementName=page, Path=DataContext.ExpandedSelectPlaylistWidth, FallbackValue=352}"
                                      Padding="8"
                                      CornerRadius="24">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="PointerEntered">
                                            <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedExpandedThumbScaleDown}" MethodName="StartAnimation"/>
                                        </Core:EventTriggerBehavior>
                                        <Core:EventTriggerBehavior EventName="PointerExited">
                                            <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedExpandedThumbScaleNormal}" MethodName="StartAnimation"/>
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>
                                    <Grid Background="{ThemeResource SecondaryItemBackgroundAltThemeBrush}" 
                                        CornerRadius="24"
                                        Height="100" 
                                        Width="100">
                                        <Image Source="{Binding Image}" Stretch="UniformToFill">
                                            <Interactivity:Interaction.Behaviors>
                                                <ToolkitBehaviors:Scale x:Name="SelectedExpandedThumbScaleDown" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.1" ScaleY="1.1" CenterX="50" CenterY="50" EasingMode="EaseOut"  EasingType="Cubic" />
                                                <ToolkitBehaviors:Scale x:Name="SelectedExpandedThumbScaleNormal"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="50" CenterY="50" EasingMode="EaseOut"   EasingType="Cubic"/>
                                            </Interactivity:Interaction.Behaviors>
                                        </Image>
                                        <Button x:Name="SelectedExpandedPlayBtn" BorderThickness="2" 
                                                Background="{x:Null}"
                                                BorderBrush="WhiteSmoke"
                                                Foreground="WhiteSmoke"
                                                RequestedTheme="Dark"
                                                CornerRadius="48"
                                                Command="{Binding ElementName=page, Path=DataContext.PlayPlaylistCommand}"
                                                CommandParameter="{Binding}"
                                                Padding="0"
                                                Height="32"
                                                Width="32"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center">
                                            <Interactivity:Interaction.Behaviors>
                                                <ToolkitBehaviors:Scale x:Name="SelectedExpandedPlayBtnScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.2" ScaleY="1.2" CenterX="16" CenterY="16" EasingMode="EaseOut"  EasingType="Cubic" />
                                                <ToolkitBehaviors:Scale x:Name="SelectedExpandedPlayBtnScaleNormal"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="16" CenterY="16" EasingMode="EaseOut"   EasingType="Cubic"/>

                                                <Core:EventTriggerBehavior EventName="PointerEntered">
                                                    <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedExpandedPlayBtnScaleUp}" MethodName="StartAnimation"/>
                                                </Core:EventTriggerBehavior>
                                                <Core:EventTriggerBehavior EventName="PointerExited">
                                                    <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedExpandedPlayBtnScaleNormal}" MethodName="StartAnimation"/>
                                                </Core:EventTriggerBehavior>
                                            </Interactivity:Interaction.Behaviors>

                                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE768;"/>
                                        </Button>
                                    </Grid>
                                    <StackPanel Grid.Column="1"
                                            Margin="24 12 8 12"
                                            VerticalAlignment="Center">
                                        <TextBlock Text="{Binding Title, FallbackValue=Uknown}"
                                               FontSize="17"
                                               FontWeight="Medium" 
                                               TextTrimming="CharacterEllipsis"
                                               ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="by " FontSize="14" Foreground="{ThemeResource ItemSecondaryForeground}" Margin="0 0 2 0"/>
                                            <TextBlock Text="{Binding Owner, FallbackValue=Unknown}" Foreground="{ThemeResource ItemSecondaryForeground}" Grid.Column="1" FontSize="14" TextTrimming="CharacterEllipsis" ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
                                        </Grid>
                                        <TextBlock Text="{Binding Description, FallbackValue=No Description}"
                                               FontSize="14"
                                               Foreground="{ThemeResource ItemSecondaryForeground}"
                                               MaxHeight="46"
                                               TextTrimming="CharacterEllipsis"
                                               TextWrapping="WrapWholeWords"
                                               ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
                                    </StackPanel>
                                    <Grid Grid.Column="2">
                                        <Button Background="{ThemeResource SecondaryItemBackgroundAltThemeBrush}" 
                                                CornerRadius="24"
                                                Command="{Binding ElementName=PlaylistContentView, Path=DataContext.RemovePlaylistToSelectedCommand}"
                                                CommandParameter="{Binding}"
                                                Grid.Column="1" 
                                                Height="32" 
                                                Margin="8 12 16 12" 
                                                Width="32" Padding="0" 
                                                Style="{StaticResource ButtonRevealStyle}">
                                            <Interactivity:Interaction.Behaviors>
                                                <ToolkitBehaviors:Scale x:Name="SelectedPlaylistBtnScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.1" ScaleY="1.1" CenterX="16" CenterY="16" EasingMode="EaseOut"  EasingType="Cubic" />
                                                <ToolkitBehaviors:Scale x:Name="SelectedPlaylistBtnScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="16" CenterY="16" EasingMode="EaseOut"   EasingType="Cubic"/>
                                                <Core:EventTriggerBehavior EventName="PointerEntered">
                                                    <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistBtnScaleUp}" MethodName="StartAnimation"/>
                                                </Core:EventTriggerBehavior>
                                                <Core:EventTriggerBehavior EventName="PointerExited">
                                                    <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistBtnScaleDown}" MethodName="StartAnimation"/>
                                                </Core:EventTriggerBehavior>
                                            </Interactivity:Interaction.Behaviors>
                                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE711;" FontSize="14"/>
                                        </Button>
                                    </Grid>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <Grid Grid.Row="1"
                          Height="44"
                          Width="{Binding ExpandedSelectPlaylistWidth, FallbackValue=352}"
                          HorizontalAlignment="Left"
                          Margin="0 0 0 12">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Interactivity:Interaction.Behaviors>
                            <!--<ToolkitBehaviors:Scale x:Name="SelectedPlaylistExpandedViewScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="0" EasingMode="EaseOut"  EasingType="Cubic" />
                            <ToolkitBehaviors:Scale x:Name="SelectedPlaylistExpandedViewScaleDown" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="0" CenterX="0" EasingMode="EaseOut"   EasingType="Cubic"/>-->
                            <ToolkitBehaviors:Offset x:Name="SelectedPlaylistExpandedViewButtonsOffsetA" Duration="450" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut" EasingType="Cubic" />
                            <ToolkitBehaviors:Offset x:Name="SelectedPlaylistExpandedViewButtonsOffsetB" Duration="450" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="24" EasingMode="EaseOut" EasingType="Cubic" />
                            <ToolkitBehaviors:Fade x:Name="SelectedPlaylistExpandedViewButtonsFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                            <!--<ToolkitBehaviors:Fade x:Name="SelectedPlaylistExpandedViewButtonsFadeOut"  Duration="300" Delay="0" AutomaticallyStart="False" Value="0" EasingMode="EaseOut"  EasingType="Cubic" />-->
                        </Interactivity:Interaction.Behaviors>


                        <Button x:Name="MergePlaylistBtn"
                                Background="{ThemeResource ItemBackgroundThemeBrush}"
                                CornerRadius="12"
                                FontSize="16"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Center"
                                Margin="0 0 4 0"
                                VerticalAlignment="Stretch"
                                VerticalContentAlignment="Center"
                                Style="{StaticResource ButtonRevealStyle}"
                                IsEnabled="{Binding IsLoading, Converter={StaticResource BoolNegationConverter}}">
                            <TextBlock Text="Merge"/>
                        </Button>
                        <Button x:Name="PlayPlaylistBtn"
                                Grid.Column="1"
                                Foreground="#ffffff"
                                Background="{ThemeResource BrandColorThemeBrush}"
                                CornerRadius="12"
                                Command="{Binding ShuffleSelectedPlaylistsCommand}"
                                FontSize="16"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Center"
                                Margin="4 0"
                                VerticalAlignment="Stretch"
                                VerticalContentAlignment="Center"
                                Style="{StaticResource ButtonRevealStyle}"
                                IsEnabled="{Binding IsLoading, Converter={StaticResource BoolNegationConverter}}">
                            <TextBlock Text="Shuffle play"/>
                        </Button>
                        <Button x:Name="DeletePlaylistBtn"
                                Grid.Column="2"
                                Background="{ThemeResource ItemBackgroundThemeBrush}"
                                CornerRadius="12"
                                FontSize="16"
                                HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Center"
                                Margin="4 0 0 0"
                                VerticalAlignment="Stretch"
                                VerticalContentAlignment="Center"
                                Style="{StaticResource ButtonRevealStyle}"
                                IsEnabled="{Binding IsLoading, Converter={StaticResource BoolNegationConverter}}">
                            <TextBlock Text="Delete"/>
                        </Button>
                    </Grid>
                </Grid>
            </Grid>
            <Grid x:Name="SelectedPanelView" CornerRadius="12" 
                  Grid.Row="2" 
                  Height="76" 
                  Width="{Binding ExpandedSelectPlaylistWidth, FallbackValue=352}"
                  Padding="0"
                  HorizontalAlignment="Left"
                  Visibility="{Binding IsSelectedPlaylistExpanded, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=True}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Interactivity:Interaction.Behaviors>
                    <ToolkitBehaviors:Scale x:Name="SelectedPlaylistCompactViewScaleDown" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="0.8" ScaleY="0.8" CenterX="0" EasingMode="EaseOut"  EasingType="Cubic" />
                    <ToolkitBehaviors:Scale x:Name="SelectedComapactExpandedViewScaleNormal" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="0" EasingMode="EaseOut"   EasingType="Cubic"/>
                    <ToolkitBehaviors:Offset x:Name="SelectedPlaylistCompactViewOffsetA" Duration="400" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="48" EasingMode="EaseOut" EasingType="Cubic" />
                    <ToolkitBehaviors:Offset x:Name="SelectedPlaylistCompactViewOffsetB" Duration="300" Delay="0" AutomaticallyStart="False" OffsetX="0" OffsetY="0" EasingMode="EaseOut" EasingType="Cubic" />
                    <ToolkitBehaviors:Fade x:Name="SelectedPlaylistCompactViewFadeIn" Duration="300" Delay="0" AutomaticallyStart="False" Value="1" EasingMode="EaseOut" EasingType="Cubic" />
                </Interactivity:Interaction.Behaviors>

                <Controls:DropShadowPanel BlurRadius="12.0" Grid.RowSpan="10" HorizontalAlignment="Stretch" 
                    VerticalAlignment="Stretch"
                    Grid.ColumnSpan="10" ShadowOpacity="0.06" OffsetX="6.0" OffsetY="6.0" Color="Black"
                    Visibility="{Binding ElementName=page, Path=DataContext, Converter={StaticResource BoolToVisibilityInverseConverter}}">

                    <Rectangle Fill="{ThemeResource ItemBackgroundThemeBrush}" Height="76" Width="{Binding ExpandedSelectPlaylistWidth, FallbackValue=352}" RadiusX="12" RadiusY="12"/>
                </Controls:DropShadowPanel>
                <!--<Grid Background="{ThemeResource ItemBackgroundThemeBrush}"
                      Grid.ColumnSpan="10"
                      CornerRadius="12"
                      VerticalAlignment="Stretch">

                </Grid>-->
                <ListView Padding="12 0"
                          Margin="0 0 12 0"
                          VerticalAlignment="Stretch"
                          ScrollViewer.HorizontalScrollMode="Disabled"
                          ItemsSource="{Binding SelectedPlaylistCollection}"
                          SelectionMode="None"
                          ItemContainerStyle="{StaticResource ListViewItemContainerStyle1}">
                    <Grid/>
                    <Grid/>
                    <Grid/>
                    <Grid/>
                    <Grid/>
                    <Grid/>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:Playlist">
                            <Grid Background="{ThemeResource SecondaryItemBackgroundAltThemeBrush}" CornerRadius="12" Height="48" Width="48">
                                <Interactivity:Interaction.Behaviors>
                                    <ToolkitBehaviors:Scale x:Name="SelectedPanelScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.1" ScaleY="1.1" CenterX="24" CenterY="24" EasingMode="EaseOut"  EasingType="Cubic" />
                                    <ToolkitBehaviors:Scale x:Name="SelectedPanelScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="24" CenterY="24" EasingMode="EaseOut"   EasingType="Cubic"/>

                                    <Core:EventTriggerBehavior EventName="PointerEntered">
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPanelScaleUp}" MethodName="StartAnimation"/>
                                    </Core:EventTriggerBehavior>
                                    <Core:EventTriggerBehavior EventName="PointerExited">
                                        <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPanelScaleDown}" MethodName="StartAnimation"/>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                                <Image Source="{Binding Image}" Stretch="UniformToFill" ToolTipService.ToolTip="{Binding Title}"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                </ListView>
                <Button Background="{ThemeResource SecondaryItemBackgroundAltThemeBrush}" 
                        CornerRadius="24" Grid.Column="1" Height="32" Margin="0 12 16 12" Width="32" 
                        Style="{StaticResource ButtonRevealStyle}"
                        Command="{Binding ToggleExpandedPlaylistSelectedCommand}"
                        CommandParameter="True">
                    <Interactivity:Interaction.Behaviors>
                        <ToolkitBehaviors:Scale x:Name="SelectedPlaylistBtnScaleUp" Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1.1" ScaleY="1.1" CenterX="16" CenterY="16" EasingMode="EaseOut"  EasingType="Cubic" />
                        <ToolkitBehaviors:Scale x:Name="SelectedPlaylistBtnScaleDown"  Duration="250" Delay="0" AutomaticallyStart="False" ScaleX="1" ScaleY="1" CenterX="16" CenterY="16" EasingMode="EaseOut"   EasingType="Cubic"/>
                        <Core:EventTriggerBehavior EventName="PointerEntered">
                            <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistBtnScaleUp}" MethodName="StartAnimation"/>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="PointerExited">
                            <Core:CallMethodAction TargetObject="{Binding ElementName=SelectedPlaylistBtnScaleDown}" MethodName="StartAnimation"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                    <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE70E;" FontSize="12"/>
                </Button>
            </Grid>
        </Grid>

        <Grid x:Name="NotLoggedInView"
              Grid.ColumnSpan="100"
              Grid.RowSpan="100"
              Visibility="{Binding Profile, Converter={StaticResource EmptyObjectNegationVisibilityConverter}, FallbackValue=collapsed}">
            <Grid.Background>
                <media:AcrylicBrush
                      BackgroundSource="Backdrop"
                      TintColor="{ThemeResource TintColor}"
                      TintOpacity="0.95"
                      BlurAmount="12"/>
            </Grid.Background>

            <StackPanel MaxWidth="400" VerticalAlignment="Center">
                <TextBlock Text="The app requires a Spotify premium account to function, please login with the button below to continue." FontSize="24" TextWrapping="WrapWholeWords"/>
                <Button RequestedTheme="Dark" 
                        Background="{ThemeResource BrandColorThemeBrush}"
                        Margin="0 12" 
                        Command="{Binding LoginCommand}"
                        Padding="24 16" 
                        CornerRadius="12" 
                        Width="200"
                        IsEnabled="{Binding IsLoading, Converter={StaticResource BoolNegationConverter}}">
                    Login with Spotify
                </Button>
            </StackPanel>
        </Grid>

        <ProgressBar Grid.ColumnSpan="100"
                     IsIndeterminate="{Binding IsLoading}"
                     Foreground="{ThemeResource ItemPrimaryForeground}"
                     Margin="0 0 0 0" 
                     VerticalAlignment="Top"
            Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}">

        </ProgressBar>
    </Grid>
</Page>
